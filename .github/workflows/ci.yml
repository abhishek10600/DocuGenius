name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.2
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}" --health-timeout=30s --health-retries=3
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python environment for the backend
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      # Install dependencies for backend
      - name: Install backend dependencies
        run: |
          cd documentqa_backend
          pip install -r requirements.txt

      # Run backend tests
      - name: Run backend tests
        run: |
          cd documentqa_backend
          python manage.py test

      # Set up Node.js for the frontend
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Install dependencies for frontend
      - name: Install frontend dependencies
        run: |
          cd documentqa_frontend
          npm install

      # Run frontend tests
      - name: Run frontend tests
        run: |
          cd documentqa_frontend
          npm test

      # Build Docker images for both backend and frontend
      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      # Run Docker containers
      - name: Run Docker containers
        run: |
          docker-compose -f docker-compose.yml up -d

      # Run tests inside Docker containers
      - name: Run tests inside Docker containers
        run: |
          docker-compose exec backend python manage.py test
          docker-compose exec frontend npm test

      # Tear down Docker containers
      - name: Tear down Docker containers
        run: |
          docker-compose -f docker-compose.yml down
